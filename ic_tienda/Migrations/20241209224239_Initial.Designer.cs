// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ic_tienda_data.Sources.Data;

#nullable disable

namespace ic_tienda_presentation.Migrations
{
    [DbContext(typeof(IcTiendaDbContext))]
    [Migration("20241209224239_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Teléfonos avanzados.",
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Computadoras portátiles.",
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dispositivos de audio.",
                            Name = "Auriculares"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Pantallas táctiles.",
                            Name = "Tablets"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Relojes con funciones smart.",
                            Name = "Relojes inteligentes"
                        });
                });

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Cámara 12MP.",
                            Name = "iPhone 13",
                            Price = 799.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Pantalla 120Hz.",
                            Name = "Samsung Galaxy S21",
                            Price = 699.99m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Cámara 48MP.",
                            Name = "OnePlus 9",
                            Price = 729.99m,
                            Stock = 45
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Cámara avanzada.",
                            Name = "Google Pixel 6",
                            Price = 599.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "i7 ultradelgada.",
                            Name = "Dell XPS 13",
                            Price = 999.99m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Batería de 15 horas.",
                            Name = "MacBook Air M1",
                            Price = 999.00m,
                            Stock = 35
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Pantalla 4K.",
                            Name = "HP Spectre x360",
                            Price = 1299.99m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Teclado retroiluminado.",
                            Name = "Lenovo ThinkPad X1",
                            Price = 1499.99m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Cancelación de ruido.",
                            Name = "Bose QC35",
                            Price = 299.99m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Cancelación activa.",
                            Name = "Sony WH-1000XM4",
                            Price = 349.99m,
                            Stock = 70
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Sonido claro.",
                            Name = "JBL 650BT",
                            Price = 129.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "Audio de alta calidad.",
                            Name = "Sennheiser Momentum",
                            Price = 299.99m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            Description = "Pantalla Retina.",
                            Name = "iPad Pro 11",
                            Price = 799.99m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Description = "Pantalla 120Hz.",
                            Name = "Samsung Galaxy Tab S7",
                            Price = 649.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            Description = "Con pantalla táctil.",
                            Name = "Microsoft Surface Pro 7",
                            Price = 899.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            Description = "GPS integrado.",
                            Name = "Garmin Venu 2",
                            Price = 249.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            Description = "Pantalla siempre encendida.",
                            Name = "Apple Watch Series 7",
                            Price = 399.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 5,
                            Description = "Monitoreo de salud.",
                            Name = "Fitbit Sense",
                            Price = 299.99m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            Description = "Pantalla AMOLED.",
                            Name = "Amazfit GTR 3",
                            Price = 179.99m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 5,
                            Description = "Cámara de acción.",
                            Name = "GoPro Hero 9",
                            Price = 399.99m,
                            Stock = 60
                        });
                });

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.OrderProduct", b =>
                {
                    b.HasOne("ic_tienda_data.Sources.Data.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ic_tienda_data.Sources.Data.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ic_tienda_data.Sources.Data.Models.Product", b =>
                {
                    b.HasOne("ic_tienda_data.Sources.Data.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
